{
  "hash": "24977374f46ee9821a51365ffe2d5009",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Path\"\n---\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom pathlib import Path\nimport os\n```\n:::\n\n\n\n\n- [Pathlib library](https://docs.python.org/3/library/pathlib.html)\n\n## WD and Home\n\n### Current WD\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# Same\nos.getcwd()\n#> '/Users/kittipos/my_book/py-notes/basic'\nPath.cwd()\n#> PosixPath('/Users/kittipos/my_book/py-notes/basic')\n```\n:::\n\n\n\n\nOn Windows, `.cwd()` returns a WindowsPath. On Linux and macOS, you get a PosixPath.\n\n### Current module\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nPath(__file__)\n#> NameError: name '__file__' is not defined\n```\n:::\n\n\n\n\nThe `__file__` attribute contains the path to the file that Python is currently importing or executing\n\nParent module:\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nPath(__file__).parent.parent\n#> NameError: name '__file__' is not defined\n```\n:::\n\n\n\n\n### Home Dir\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nPath.home()\n#> PosixPath('/Users/kittipos')\n```\n:::\n\n\n\n\n## Path Operations\n\n### Passing as string\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nPath(r\"C:\\Users\\philipp\\realpython\\file.txt\")\n#> PosixPath('C:\\\\Users\\\\philipp\\\\realpython\\\\file.txt')\n```\n:::\n\n\n\n\nuse **raw string literals** (`r'string'`) to represent Windows paths\n\n### Absolute path\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nPath(\".\").absolute()\n#> PosixPath('/Users/kittipos/my_book/py-notes/basic')\nPath(\".\").resolve() # Better\n#> PosixPath('/Users/kittipos/my_book/py-notes/basic')\n```\n:::\n\n\n\n\n### Check Existance\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nPath(\"somefile\").exists()\n#> False\n```\n:::\n\n\n\n\n### Glob\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nsorted(Path('.').glob('*.qmd'))\n#> [PosixPath('comprehen.qmd'), PosixPath('cond.qmd'), PosixPath('ctr-flow-ex.qmd'), PosixPath('data-str.qmd'), PosixPath('dataclass.qmd'), PosixPath('exception.qmd'), PosixPath('file.qmd'), PosixPath('fun-prog.qmd'), PosixPath('function-02.qmd'), PosixPath('function-dec.qmd'), PosixPath('function.qmd'), PosixPath('json.qmd'), PosixPath('loop.qmd'), PosixPath('match-case.qmd'), PosixPath('number.qmd'), PosixPath('oop-abc.qmd'), PosixPath('oop.qmd'), PosixPath('path.qmd'), PosixPath('pkg.qmd'), PosixPath('primitive.qmd'), PosixPath('request.qmd'), PosixPath('string.qmd'), PosixPath('typing.qmd')]\n# Or\n# [x for x in Path('.').glob('*.qmd')]\n```\n:::\n\n\n\n\n### Join Path\n\nUse slash `/`\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nPath.cwd() / Path(\"somefile.txt\")\n#> PosixPath('/Users/kittipos/my_book/py-notes/basic/somefile.txt')\n```\n:::\n\n\n\n\nUse `joinpath()`\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nPath.home().joinpath(\"python\", \"scripts\", \"test.py\")\n#> PosixPath('/Users/kittipos/python/scripts/test.py')\n```\n:::\n\n\n\n\n### Path Component\n\nconveniently available as properties. Basic examples include:\n\n-   **`.name`**: The filename without any directory\n\n-   **`.stem`**: The filename without the file extension\n\n-   **`.suffix`**: The file extension\n\n-   **`.anchor`**: The part of the path before the directories\n\n-   **`.parent`**: The directory containing the file, or the parent directory if the path is a directory\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom pathlib import Path\npath = Path(\".\").cwd()\npath\n#> PosixPath('/Users/kittipos/my_book/py-notes/basic')\n\npath.name\n#> 'basic'\n\npath.stem\n#> 'basic'\n\npath.suffix\n#> ''\n\npath.anchor\n#> '/'\n\npath.parent\n#> PosixPath('/Users/kittipos/my_book/py-notes')\n\npath.parent.parent\n#> PosixPath('/Users/kittipos/my_book')\n```\n:::",
    "supporting": [
      "path_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}