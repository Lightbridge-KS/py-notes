{
  "hash": "cc3dad34e12b7b5bcda9499a6ef0483c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Primitive Types\"\n---\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\ntype(42)\n#> <class 'int'>\ntype(4.2) \n#> <class 'float'>\ntype(4.)\n#> <class 'float'>\ntype('forty-two')      \n#> <class 'str'>\ntype(True)             \n#> <class 'bool'>\n```\n:::\n\n\n\n\n### Type Conversion\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nint(2.8)\n#> 2\nfloat(1)\n#> 1.0\nstr(3)\n#> '3'\nbool(0)\n#> False\n```\n:::\n\n\n\n\nThese considered **\"Falsy\"**\n\n```python\n\"\"\n0\nNone\n```\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nbool(0)\n#> False\nbool(1)\n#> True\n\nbool(\"\")\n#> False\nbool(\"F\")\n#> True\n\nbool(None)\n#> False\n```\n:::\n\n\n\n\n\n### Attribute\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\na = \"foo\"\na.capitalize()\n#> 'Foo'\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}